### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

type Mutation {
  addTag(id: Int!, tags: [String!]!): ServerPayload!
  createServer(content: String, cover: String, ip: String!, tags: [String!]!, title: String!): ServerPayload!
  deletePost(id: Int!): Post
  deleteServer(id: Int!): ServerPayload!
  oAuthLogin(code: String!): AuthPayload!
  publish(id: Int!): Post
  removeTag(id: Int!, tag: String!): ServerPayload!
  updateCover(cover: String!, id: Int!): ServerPayload!
  updateIp(id: Int!, ip: String!): ServerPayload!
  updateRemoteInfo(id: Int!, ip: String!): ServerPayload!
  updateTitle(id: Int!, title: String!): ServerPayload!
}

type Post {
  author: User
  content: String
  id: Int!
  published: Boolean!
  title: String!
}

type Query {
  feed: [Post!]!
  filterPosts(searchString: String): [Post!]!
  me: User
  post(id: Int): Post
}

type Server {
  author: User!
  content: String
  cover: String
  id: Int!
  published: Boolean!
  slots: Int!
  tags(after: TagWhereUniqueInput, before: TagWhereUniqueInput, first: Int, last: Int): [Tag!]!
  title: String!
}

type ServerPayload {
  server: Server!
}

input ServerWhereUniqueInput {
  id: Int
}

type Tag {
  id: Int!
  Servers(after: ServerWhereUniqueInput, before: ServerWhereUniqueInput, first: Int, last: Int): [Server!]!
  tagName: String!
}

input TagWhereUniqueInput {
  id: Int
  tagName: String
}

type User {
  email: String!
  id: Int!
  Post: [Post!]!
  username: String!
}

type Version {
  id: Int!
  Servers(after: ServerWhereUniqueInput, before: ServerWhereUniqueInput, first: Int, last: Int): [Server!]!
  versionName: String!
}

type Vote {
  author: User!
  id: Int!
  serverId: Int!
}
